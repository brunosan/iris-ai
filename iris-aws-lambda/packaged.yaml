AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Creates the Lambda function and API for the PyTorch inference application.
Parameters:
  BucketName:
    Type: String
    Default: iris-ai
    Description: Enter the name of the S3 bucket storing your PyTorch model artefacts.
  ObjectKey:
    Type: String
    Default: fastai-models/iris/model.tar.gz
    Description: Enter the S3 object key path of your PyTorch model artefacts.
  LambdaLayerArn:
    Type: String
    Default: arn:aws:lambda:us-east-1:934676248949:layer:pytorchv1-py36:2
    Description: Enter the PyTorch Lambda Layer ARN. Defaults to a public one in the
      "us-east-1" region.
Globals:
  Function:
    Timeout: 300
Resources:
  PyTorchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://iris-ai/ade27c5b32871bd4200f438d21af135c
      Handler: app.lambda_handler
      Runtime: python3.6
      MemorySize: 3008
      Environment:
        Variables:
          MODEL_BUCKET:
            Ref: BucketName
          MODEL_KEY:
            Ref: ObjectKey
      Policies:
      - S3ReadPolicy:
          BucketName:
            Ref: BucketName
      Layers:
      - Ref: LambdaLayerArn
      Events:
        PyTorch:
          Type: Api
          Properties:
            Path: /invocations
            Method: post
Outputs:
  PyTorchApi:
    Description: API Gateway endpoint URL for Prod stage for PyTorch function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/invocations/
  PyTorchFunction:
    Description: PyTorch Lambda Function ARN
    Value:
      Fn::GetAtt:
      - PyTorchFunction
      - Arn
  PyTorchFunctionIamRole:
    Description: Implicit IAM Role created for PyTorch function
    Value:
      Fn::GetAtt:
      - PyTorchFunctionRole
      - Arn
